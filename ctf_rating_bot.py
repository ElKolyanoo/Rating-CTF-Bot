import telebot
import sqlite3
from dotenv import load_dotenv
import os
from telebot.types import ReplyKeyboardMarkup, KeyboardButton

load_dotenv()

TOKEN = os.getenv("BOT_TOKEN")
bot = telebot.TeleBot(TOKEN)

conn = sqlite3.connect('rating.db', check_same_thread=False)
cursor = conn.cursor()

cursor.execute('''
CREATE TABLE IF NOT EXISTS users (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER UNIQUE,
    nickname TEXT,
    points INTEGER DEFAULT 0
)
''')
conn.commit()

pending_registration = {}

def add_points(user_id, amount):
    cursor.execute("SELECT * FROM users WHERE user_id=?", (user_id,))
    row = cursor.fetchone()
    if row:
        cursor.execute("UPDATE users SET points = points + ? WHERE user_id=?", (amount, user_id))
    conn.commit()

def get_points(user_id):
    cursor.execute("SELECT points FROM users WHERE user_id=?", (user_id,))
    row = cursor.fetchone()
    return row[0] if row else 0

def get_nickname(user_id):
    cursor.execute("SELECT nickname FROM users WHERE user_id=?", (user_id,))
    row = cursor.fetchone()
    return row[0] if row else "nameless"

def show_main_menu(chat_id):
    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
    btn1 = KeyboardButton("1 üöÄ")
    btn2 = KeyboardButton("2 üèÜ")
    btn3 = KeyboardButton("3 üéñ")
    markup.add(btn1, btn2, btn3)

    bot.send_message(
        chat_id,
        "1. –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –æ—á–∫–∏.\n"
        "2. –¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤.\n"
        "3. –ú–æ–π —Ä–∞–Ω–≥.",
        reply_markup=markup
    )

@bot.message_handler(commands=['start'])
def send_welcome(message):
    user_id = message.from_user.id
    cursor.execute("SELECT * FROM users WHERE user_id=?", (user_id,))
    if cursor.fetchone():
        show_main_menu(message.chat.id)
        return

    pending_registration[user_id] = True
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç!\n–Ø ‚Äî –±–æ—Ç –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Ç–≤–æ–µ–≥–æ CTF-—Ä–µ–π—Ç–∏–Ω–≥–∞.\n–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏ —Å–≤–æ–π –Ω–∏–∫–Ω–µ–π–º.\n–û–Ω –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ —Ç–æ–ø–µ –∏–≥—Ä–æ–∫–æ–≤ –∏ –±—É–¥–µ—Ç –≤–∏–¥–µ–Ω –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º. –ï–≥–æ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å.")

@bot.message_handler(func=lambda message: message.from_user.id in pending_registration)
def handle_nickname(message):
    user_id = message.from_user.id
    nickname = message.text.strip()

    if not nickname:
        bot.send_message(message.chat.id, "–ù–∏–∫–Ω–µ–π–º –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞:")
        return

    cursor.execute("INSERT INTO users (user_id, nickname) VALUES (?, ?)", (user_id, nickname))
    conn.commit()
    del pending_registration[user_id]

    bot.send_message(message.chat.id, f"–û—Ç–ª–∏—á–Ω–æ, {nickname}! –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞. –£–¥–∞—á–∏ –≤ –º–∏—Ä–µ CTF!")
    show_main_menu(message.chat.id)

@bot.message_handler(commands=['addpoints'])
def addpoints(message):
    if message.from_user.username != "EIWisee":
        bot.reply_to(message, "Request rejected.")
        return
    try:
        parts = message.text.split()
        nickname = parts[1]
        points = int(parts[2])
        cursor.execute("SELECT user_id FROM users WHERE nickname=?", (nickname,))
        row = cursor.fetchone()
        if row:
            add_points(row[0], points)
            bot.reply_to(message, f"Points awarded: {points}. User: {nickname}.")
        else:
            bot.reply_to(message, "User with this nickname not found.")
    except:
        bot.reply_to(message, "Use the format: /addpoints nickname x")

@bot.message_handler(func=lambda message: message.text in ["1 üöÄ", "2 üèÜ", "3 üéñ"])
def handle_reply_buttons(message):
    user_id = message.from_user.id
    nickname = get_nickname(user_id)

    if message.text == "1 üöÄ":
        points = get_points(user_id)
        cursor.execute("SELECT user_id, points FROM users ORDER BY points DESC")
        rows = cursor.fetchall()
        place = 1
        for row in rows:
            if row[0] == user_id:
                break
            place += 1
        bot.send_message(message.chat.id, f"üìä {nickname}, —É —Ç–µ–±—è {points} –æ—á–∫–æ–≤. –¢—ã –Ω–∞ {place} –º–µ—Å—Ç–µ.")

    elif message.text == "2 üèÜ":
        cursor.execute("SELECT nickname, points FROM users ORDER BY points DESC LIMIT 10")
        rows = cursor.fetchall()
        msg = "üèÜ –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤:\n"
        for i, row in enumerate(rows):
            msg += f"{i+1}. {row[0]} ‚Äî {row[1]} pts.\n"
        bot.send_message(message.chat.id, msg)

    elif message.text == "3 üéñ":
        points = get_points(user_id)
        if points < 50:
            rank = "–ù–æ–≤–∏—á–æ–∫ üê£"
        elif points < 150:
            rank = "–ü–∞–¥–∞–≤–∞–Ω ü•ã"
        elif points < 300:
            rank = "–•–∞–∫–µ—Ä üíª"
        elif points < 500:
            rank = "–ö–∏–±–µ—Ä-–Ω–∏–Ω–¥–∑—è ü•∑"
        else:
            rank = "–õ–µ–≥–µ–Ω–¥–∞ üî•"
        bot.send_message(message.chat.id, f"üéñ {nickname}, —Ç–≤–æ–π —Ä–∞–Ω–≥:\n{rank}.")

print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ.")
bot.infinity_polling()
